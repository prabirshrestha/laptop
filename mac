successfully() {
  $* || (echo "\nfailed" 1>&2 && exit 1)
}

fancy_echo() {
  echo "\n$1"
}

if [ -f /etc/zshenv ]; then
  fancy_echo "Fix OSX zsh environment bug ..."
    successfully sudo mv /etc/{zshenv,zshrc}
fi

fancy_echo "Fixing permissions and bugs ..."
  successfully sudo mkdir -p /usr/local
  successfully sudo chown -R `whoami` /usr/local
  successfully sudo mkdir -p /usr/include/python2.7
  successfully sudo ln -s /System/Library/Frameworks/Python.framework/Versions/Current/include/python2.7/pyconfig.h /usr/include/python2.7/pyconfig.h

fancy_echo "Install Homebrew, a good OS X package manager ..."
  successfully ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)"
  successfully brew update

read "spfvim? Would you like to install spf13-vim? (Y/n)"
read "ohmyzsh? Would you like to install oh-my-zsh? (Y/n)"
read "dotfiles? Would you like to install prabir's dotfiles? (Y/n)"

if [[ "$spfvim" =~ ^[Yy]$ ]]
then
  curl http://j.mp/spf13-vim3 -L > spf13-vim.sh && sh spf13-vim.sh && rm spf13-vim.sh
fi

if [[ "$ohmyzsh" =~ ^[Yy]$ ]]
then
  curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh
fi

if ! grep -qs "recommended by brew doctor" ~/.zshrc; then
  fancy_echo "Put Homebrew location earlier in PATH ..."
    successfully echo "\n# recommended by brew doctor" >> ~/.zshrc
    successfully echo "export PATH=/usr/local/bin:\$PATH\n" >> ~/.zshrc
    successfully source ~/.zshrc
fi

fancy_echo "Install rbenv for changing Ruby versions ..."
  successfully brew install rbenv

  if ! grep -qs "rbenv init" ~/.zshrc; then
    successfully echo 'eval "$(rbenv init -)"' >> ~/.zshrc

    fancy_echo "Enable shims and autocompletion ..."
      successfully eval "$(rbenv init -)"
  fi

  successfully source ~/.zshrc

if [[ "$dotfiles" =~ ^[Yy]$ ]]
then
  curl https://raw.github.com/prabirshrestha/dotfiles/master/install.sh | bash
fi

fancy_echo "Settings ~/.zshrc to load ~/.zshrc.local if it exists ..."
  if ! grep -qs "source $HOME/.zshrc.local" ~/.zshrc; then
    successfully echo "\n# load ~/.zshrc.local if it exists" >> ~/.zshrc
    successfully echo "if [[ -e $HOME/.zshrc.local ]]; then" >> ~/.zshrc
    successfully echo "        source $HOME/.zshrc.local" >> ~/.zshrc
    successfully echo "fi" >> ~/.zshrc
  fi

  successfully source ~/.zshrc

fancy_echo "Installing pip"
  successfully sudo easy_install pip
  
fancy_echo "Installing brew-cask"
  successfully brew tap phinze/homebrew-cask
  successfully brew install brew-cask

fancy_echo "Install nvm for changing node versions ..."
  successfully curl https://raw.github.com/creationix/nvm/master/install.sh | sh

  if ! grep -qs ".nvm/nvm.sh" ~/.zshrc; then
    successfully echo '[ -f ~/.nvm/nvm.sh ] && { source ~/.nvm/nvm.sh; nvm use default > /dev/null }' >> ~/.zshrc
  fi

  source ~/.zshrc

fancy_echo "Install NodeJS"
  successfully nvm install 0.10.25
  successfully nvm use 0.10.25
  successfully nvm alias default 0.10.25
  successfully npm install -g nodemon json express jshint http-server localtunnel node-gyp gulp bower

fancy_echo "Install git"
  successfully brew install git

fancy_echo "Install vim"
  successfully brew install vim
  
fancy_echo "Install Alfred"
  successfully brew cask install alfred
  
fancy_echo "Install AppCleaner"
  successfully brew cask install app-cleaner
  
fancy_echo "Install Google Chrome"
  successfully brew cask install google-chrome
  
fancy_echo "Install iTerm2"
  successfully brew cask install iterm2

fancy_echo "Install Keka"
  successfully brew cask install keka
  
fancy_echo "Install Adobe Air"
  successfully brew cask install adobe-air
  
fancy_echo "Install Parallels 9"
  successfully brew cask install parallels9
  
fancy_echo "Install Virtual Box"
  successfully brew cask install virtualbox

fancy_echo "Install Vagrant"
  successfully brew cask install vagrant

fancy_echo "Install mongo"
  successfully brew install mongodb

fancy_echo "Install Postgres, a good open source relational database ..."
  successfully brew install postgres --no-python
  successfully initdb /usr/local/var/postgres -E utf8

fancy_echo "Install Redis, a good key-value database ..."
  successfully brew install redis

fancy_echo "Install The Silver Searcher (better than ack or grep) for searching the contents of files ..."
  successfully brew install the_silver_searcher

fancy_echo "Install ctags, for indexing files for vim tab completion of methods, classes, variables ..."
  successfully brew install ctags-exuberant

fancy_echo "Install tmux, for saving project state and switching between projects ..."
  successfully brew install tmux

fancy_echo "Install reattach-to-user-namespace, for copy-paste and RubyMotion compatibility with tmux ..."
  successfully brew install reattach-to-user-namespace
  
fancy_echo "Install tree"
  successfully brew install tree

fancy_echo "Install QT, used by Capybara Webkit for headless Javascript integration testing ..."
  successfully brew install qt

fancy_echo "Install watch, used to execute a program periodically and show the output ..."
  successfully brew install watch

fancy_echo "Install rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries..."
  successfully brew install rbenv-gem-rehash

fancy_echo "Install ruby-build for installing Rubies ..."
  successfully brew install ruby-build

fancy_echo "Install Ruby 1.9.3-p392 ..."
  CC=gcc-4.2 successfully rbenv install 1.9.3-p392

fancy_echo "Set Ruby 1.9.3-p392 as global default Ruby ..."
  successfully rbenv global 1.9.3-p392
  successfully rbenv shell 1.9.3-p392

fancy_echo "Using ruby version ..."
  successfully source ~/.zshrc
  successfully ruby -v

fancy_echo "Update to latest Rubygems version ..."
  successfully gem update --system

fancy_echo "Install critical Ruby gems for Rails development ..."
  successfully gem install bundler foreman pg rails thin --no-document

fancy_echo "Intall tmuxinator .."
  successfully gem install tmuxinator

fancy_echo "Install GitHub CLI client ..."
  successfully gem install hub --no-document

fancy_echo "Install Heroku CLI client ..."
  successfully brew install heroku-toolbelt

fancy_echo "Install the heroku-config plugin for pulling config variables locally to be used as ENV variables ..."
  successfully heroku plugins:install git://github.com/ddollar/heroku-config.git

if ! grep -qs "DO NOT EDIT BELOW THIS LINE" ~/.zshrc; then
  fancy_echo "Prepare ~/.zshrc for http://github.com/prabirshrestha/dotfiles ..."
    successfully echo "# DO NOT EDIT BELOW THIS LINE\n" >> ~/.zshrc
fi
